<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

    <!-- Property Placeholder 설정 -->
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="location" value="classpath:config/database.properties" />
    </bean>

    <!-- DataSource 설정 -->
    <bean id="dataSource"
        class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    
    <!-- JdbcTemplate 빈 정의 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <context:component-scan base-package="com.springbook.biz" />

    <aop:aspectj-autoproxy />
</beans>

<!-- <bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl"> 
		<property name="userDAO" ref="userDAO"/> 
		</bean> 
		<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"/> 
 -->
		
		<!-- <bean id="around" class="com.springbook.biz.common.AroundAdvice" />
		
		<aop:config>
			<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut"/>
			
			<aop:aspect ref="around">
				<aop:around pointcut-ref="allPointcut" method="aroundLog"/>
			</aop:aspect>
		</aop:config> -->
		
		
<!-- 		<bean id="before" class="com.springbook.biz.common.BeforeAdvice" />
		<aop:config>
			<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut"/>
			<aop:aspect ref="before">
				<aop:before pointcut-ref="allPointcut" method="beforeLog"/>
			</aop:aspect>
		</aop:config>
		
		<bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice" />
		<aop:config>
			<aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))" />
			<aop:aspect ref="afterReturning">
				<aop:after-returning pointcut-ref="getPointcut" method="afterLog" returning="returnObj" />
			</aop:aspect>
		</aop:config> -->
		
		<!-- <bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice"/>
		<aop:config>
			<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))" />
			<aop:aspect ref="afterThrowing">
				<aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog" throwing="exceptObj" />
			</aop:aspect>
		</aop:config> -->





<!-- <bean id="tv" class="polymorphism.SamsungTV" p:speaker-ref="apple" p:price="27000000"> -->
<!-- <property name="speaker" ref="apple"></property> <property name="price" 
	value="1000000"></property> -->

<!-- <constructor-arg index="0" ref="apple"></constructor-arg> <constructor-arg 
	index="1" value="2700000"></constructor-arg> -->
<!-- </bean> -->

<!-- <bean id="sony" class="polymorphism.SonySpeaker" /> <bean id="apple" 
	class="polymorphism.AppleSpeaker" /> <bean id="collectionBean" class="com.springbook.ioc.injection.CollectionBean"> 
	<property name="addressList"> <map> <entry> <key><value>고길동</value></key> 
	<value>서울시 강남구 역삼동</value> </entry> <entry> <key><value>마이콜</value></key> 
	<value>서울시 강서구 화곡동</value> </entry> </map> </property> </bean> -->


<!-- <bean id="lg" class="polymorphism.LgTV"> </bean> -->